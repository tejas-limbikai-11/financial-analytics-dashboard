{
  "info": {
    "name": "Financial Analytics Dashboard API",
    "description": "Complete API collection for the Financial Analytics Dashboard with authentication, transactions, and utility endpoints",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.environment.set('auth_token', response.token);",
                  "        pm.collectionVariables.set('auth_token', response.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "http://localhost:3000/api/auth/register",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account. Returns JWT token on success."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "http://localhost:3000/api/auth/register",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "auth", "register"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"507f1f77bcf86cd799439011\",\n    \"email\": \"john.doe@example.com\",\n    \"name\": \"John Doe\"\n  },\n  \"message\": \"Account created successfully! Welcome to Financial Analytics!\"\n}"
            }
          ]
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.environment.set('auth_token', response.token);",
                  "        pm.collectionVariables.set('auth_token', response.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "http://localhost:3000/api/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "auth", "login"]
            },
            "description": "Login with existing user credentials. Returns JWT token on success."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "http://localhost:3000/api/auth/login",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"507f1f77bcf86cd799439011\",\n    \"email\": \"john@example.com\",\n    \"name\": \"John Smith\"\n  },\n  \"message\": \"Login successful! Welcome back!\"\n}"
            }
          ]
        },
        {
          "name": "Verify Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:3000/api/auth/verify",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "auth", "verify"]
            },
            "description": "Verify if the current JWT token is valid and get user information."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "url": {
                  "raw": "http://localhost:3000/api/auth/verify",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "auth", "verify"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"user\": {\n    \"id\": \"507f1f77bcf86cd799439011\",\n    \"email\": \"john@example.com\",\n    \"name\": \"John Smith\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Initialize User Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "http://localhost:3000/api/auth/initialize",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "auth", "initialize"]
            },
            "description": "Initialize user account with sample transaction data (300 transactions). Only runs if user has no existing data."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "http://localhost:3000/api/auth/initialize",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "auth", "initialize"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Data initialized successfully!\",\n  \"transactionsCreated\": 300\n}"
            }
          ]
        }
      ],
      "description": "Authentication endpoints for user registration, login, token verification, and data initialization"
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:3000/api/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "transactions"]
            },
            "description": "Get all transactions for the authenticated user, sorted by date (newest first)."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "url": {
                  "raw": "http://localhost:3000/api/transactions",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "transactions"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"date\": \"2024-12-29T10:30:00.000Z\",\n    \"amount\": 1500.00,\n    \"category\": \"Revenue\",\n    \"description\": \"Revenue Transaction #1\",\n    \"status\": \"paid\",\n    \"user\": \"507f1f77bcf86cd799439012\",\n    \"type\": \"income\"\n  },\n  {\n    \"_id\": \"507f1f77bcf86cd799439013\",\n    \"date\": \"2024-12-28T14:20:00.000Z\",\n    \"amount\": -1200.50,\n    \"category\": \"Expense\",\n    \"description\": \"Expense Transaction #2\",\n    \"status\": \"paid\",\n    \"user\": \"507f1f77bcf86cd799439012\",\n    \"type\": \"expense\"\n  }\n]"
            }
          ]
        },
        {
          "name": "Create New Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 2500.00,\n  \"category\": \"Revenue\",\n  \"description\": \"Consulting Services Payment\",\n  \"status\": \"paid\",\n  \"type\": \"income\"\n}"
            },
            "url": {
              "raw": "http://localhost:3000/api/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "transactions"]
            },
            "description": "Create a new transaction for the authenticated user."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 2500.00,\n  \"category\": \"Revenue\",\n  \"description\": \"Consulting Services Payment\",\n  \"status\": \"paid\",\n  \"type\": \"income\"\n}"
                },
                "url": {
                  "raw": "http://localhost:3000/api/transactions",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "transactions"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"transaction\": {\n    \"_id\": \"507f1f77bcf86cd799439014\",\n    \"date\": \"2024-12-29T15:30:00.000Z\",\n    \"amount\": 2500.00,\n    \"category\": \"Revenue\",\n    \"description\": \"Consulting Services Payment\",\n    \"status\": \"paid\",\n    \"userId\": \"507f1f77bcf86cd799439012\",\n    \"type\": \"income\",\n    \"createdAt\": \"2024-12-29T15:30:00.000Z\",\n    \"updatedAt\": \"2024-12-29T15:30:00.000Z\",\n    \"user\": \"507f1f77bcf86cd799439012\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Expense Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 850.00,\n  \"category\": \"Expense\",\n  \"description\": \"Office Supplies Purchase\",\n  \"status\": \"pending\",\n  \"type\": \"expense\"\n}"
            },
            "url": {
              "raw": "http://localhost:3000/api/transactions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "transactions"]
            },
            "description": "Create a new expense transaction for the authenticated user."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 850.00,\n  \"category\": \"Expense\",\n  \"description\": \"Office Supplies Purchase\",\n  \"status\": \"pending\",\n  \"type\": \"expense\"\n}"
                },
                "url": {
                  "raw": "http://localhost:3000/api/transactions",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "transactions"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"transaction\": {\n    \"_id\": \"507f1f77bcf86cd799439015\",\n    \"date\": \"2024-12-29T15:35:00.000Z\",\n    \"amount\": -850.00,\n    \"category\": \"Expense\",\n    \"description\": \"Office Supplies Purchase\",\n    \"status\": \"pending\",\n    \"userId\": \"507f1f77bcf86cd799439012\",\n    \"type\": \"expense\",\n    \"createdAt\": \"2024-12-29T15:35:00.000Z\",\n    \"updatedAt\": \"2024-12-29T15:35:00.000Z\",\n    \"user\": \"507f1f77bcf86cd799439012\"\n  }\n}"
            }
          ]
        }
      ],
      "description": "Transaction management endpoints for creating and retrieving financial transactions"
    },
    {
      "name": "Utilities",
      "item": [
        {
          "name": "Test Database Connection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/test-connection",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "test-connection"]
            },
            "description": "Test the MongoDB database connection and perform basic operations to verify system health."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://localhost:3000/api/test-connection",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["api", "test-connection"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"MongoDB connection is working perfectly!\",\n  \"collections\": 3,\n  \"timestamp\": \"2024-12-29T15:40:00.000Z\"\n}"
            }
          ]
        }
      ],
      "description": "Utility endpoints for testing and system health checks"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script for all requests",
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test to check response time",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Global test to check content type for JSON responses",
          "if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
          "    pm.test('Content-Type is application/json', function () {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    });",
          "}"
        ]
      }
    }
  ]
}
